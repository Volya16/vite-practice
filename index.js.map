{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["// Якщо імейл і пароль користувача збігаються, зберігайте дані з форми при сабміті\n// у локальне сховище і змінюй кнопку Login на Logout і роби поля введення\n// Недоступними для змін.\n\n// При перезавантаженні сторінки, якщо користувач залогінений, ми маємо бачити logout-кнопку\n// та недоступні для зміни поля з даними користувача.\n// Клік по кнопці logout повертає все до початкового вигляду і видаляє дані користувача\n// З локального сховища.\n// Якщо введені дані не збігаються з потрібними даними, викликати аlert і\n// повідомляти про помилку.\n\nconst USER_DATA = {\n  email: 'user@mail.com',\n  password: 'secret',\n};\n\nconst localStorageKey = 'user-data';\n\nconst loginFormEl = document.querySelector('.login-form');\nconst btnEl = document.querySelector('[name=\"button\"]');\n\nconst { email, password } = loginFormEl.elements;\n\nloginFormEl.addEventListener('submit', evt => {\n  evt.preventDefault();\n  if (btnEl.textContent === 'Logout') {\n    localStorage.removeItem(localStorageKey);\n    loginFormEl.reset();\n    email.removeAttribute('readonly');\n    password.removeAttribute('readonly');\n    btnEl.textContent = 'Login';\n    return;\n  }\n\n  const emailValue = email.value.trim();\n  const passwordValue = password.value.trim();\n\n  if (emailValue === '' || passwordValue === '') {\n    alert('Fill all fields!');\n    return;\n  }\n  if (emailValue !== USER_DATA.email || passwordValue !== USER_DATA.password) {\n    alert('Wrong data!');\n    return;\n  }\n  localStorage.setItem(\n    localStorageKey,\n    JSON.stringify({ email: emailValue, password: passwordValue })\n  );\n\n  btnEl.textContent = 'Logout';\n  email.setAttribute('readonly', true);\n  password.setAttribute('readonly', true);\n});\n\nconst savedData = localStorage.getItem(localStorageKey);\nif (savedData) {\n  const parsedData = JSON.parse(savedData);\n  email.value = parsedData.email;\n  password.value = parsedData.password;\n  btnEl.textContent = 'Logout';\n  email.setAttribute('readonly', true);\n  password.setAttribute('readonly', true);\n}\n\n// Додай відображення дати і часу в реальному часі\n\nconst dateTime = document.querySelector('.date span');\n\ndateTime.textContent = new Date().toLocaleString();\n\nconsole.log(new Date());\nconsole.log(new Date().toLocaleString());\n\nsetInterval(() => {\n  dateTime.textContent = new Date().toLocaleString();\n}, 1000);\n\n// Перероби функцію на проміс таким чином, щоб проміс повертав значення\n// через 2 секунди після виклику функції\n\n// function greet() {\n//   return 'hello world';\n// }\n\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     resolve('hello world');\n//   }, 2000);\n// });\n\n// promise.then(response => {\n//     console.log(response);\n// });\n\n// - Використовуй prompt та повертай значення звідти.\n// - Створи функцію, яка буде набувати значення з prompt і повертатиме проміс.\n// Якщо значення не є числом, відхиляй проміс та логіруй \"error\".\n// Якщо значення парне, вирішуй проміс та повертай \"even\" через 1 секунду.\n// Якщо значення не парне, вирішуй проміс та повертай \"odd\" через 2 секунди.\n\n// const userData = prompt('Enter somthing!');\n// fun(userData)\n//   .then(res => {\n//     console.log(res);\n//   })\n//   .catch(err => console.log(err));\n\n// function fun(data) {\n//   return new Promise((res, rej) => {\n//     if (Number.isNaN(Number(data))) {\n//       rej('error');\n//     } else if (data % 2 === 0) {\n//       setTimeout(() => {\n//         res('even');\n//       }, 1000);\n//     } else {\n//       setTimeout(() => {\n//         res('odd');\n//       }, 2000);\n//     }\n//   });\n// }\n\n// // Напишіть функцію calculateAge(birthDate), яка приймає дату народження у форматі YYYY-MM-DD і повертає поточний вік.\n// // Підказка: Використайте об'єкт Date для обчислення різниці між сьогоднішньою датою і датою народження\n\n// const calculateAge = birthDate => {\n//   const userDate = new Date(birthDate);\n\n//   const birthdayYear = userDate.getFullYear();\n//   const birthdayMonth = userDate.getMonth();\n//   const birthdayDay = userDate.getDate();\n\n//   let diffYear = new Date().getFullYear() - birthdayYear;\n\n//   const diffMouth = new Date().getMonth() - birthdayMonth;\n\n//   const diffDay = new Date().getDate() - birthdayDay;\n\n//   if (diffMouth < 0 || (diffDay < 0 && diffMouth === 0)) {\n//     diffYear -= 1;\n//   }\n\n//   return diffYear;\n// };\n\n// console.log(calculateAge('2000-01-07'));\n// console.log(calculateAge('2000-01-17'));\n// console.log(calculateAge('2000-07-17'));\n\n\n\n"],"names":["USER_DATA","localStorageKey","loginFormEl","btnEl","email","password","evt","emailValue","passwordValue","savedData","parsedData","dateTime"],"mappings":"oCAWA,MAAMA,EAAY,CAChB,MAAO,gBACP,SAAU,QACZ,EAEMC,EAAkB,YAElBC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAQ,SAAS,cAAc,iBAAiB,EAEhD,CAAE,MAAAC,EAAO,SAAAC,GAAaH,EAAY,SAExCA,EAAY,iBAAiB,SAAUI,GAAO,CAE5C,GADAA,EAAI,eAAc,EACdH,EAAM,cAAgB,SAAU,CAClC,aAAa,WAAWF,CAAe,EACvCC,EAAY,MAAK,EACjBE,EAAM,gBAAgB,UAAU,EAChCC,EAAS,gBAAgB,UAAU,EACnCF,EAAM,YAAc,QACpB,MACD,CAED,MAAMI,EAAaH,EAAM,MAAM,KAAI,EAC7BI,EAAgBH,EAAS,MAAM,KAAI,EAEzC,GAAIE,IAAe,IAAMC,IAAkB,GAAI,CAC7C,MAAM,kBAAkB,EACxB,MACD,CACD,GAAID,IAAeP,EAAU,OAASQ,IAAkBR,EAAU,SAAU,CAC1E,MAAM,aAAa,EACnB,MACD,CACD,aAAa,QACXC,EACA,KAAK,UAAU,CAAE,MAAOM,EAAY,SAAUC,EAAe,CACjE,EAEEL,EAAM,YAAc,SACpBC,EAAM,aAAa,WAAY,EAAI,EACnCC,EAAS,aAAa,WAAY,EAAI,CACxC,CAAC,EAED,MAAMI,EAAY,aAAa,QAAQR,CAAe,EACtD,GAAIQ,EAAW,CACb,MAAMC,EAAa,KAAK,MAAMD,CAAS,EACvCL,EAAM,MAAQM,EAAW,MACzBL,EAAS,MAAQK,EAAW,SAC5BP,EAAM,YAAc,SACpBC,EAAM,aAAa,WAAY,EAAI,EACnCC,EAAS,aAAa,WAAY,EAAI,CACxC,CAIA,MAAMM,EAAW,SAAS,cAAc,YAAY,EAEpDA,EAAS,YAAc,IAAI,KAAM,EAAC,eAAc,EAEhD,QAAQ,IAAI,IAAI,IAAM,EACtB,QAAQ,IAAI,IAAI,OAAO,eAAgB,CAAA,EAEvC,YAAY,IAAM,CAChBA,EAAS,YAAc,IAAI,KAAM,EAAC,eAAc,CAClD,EAAG,GAAI"}